import{getContext as e,getElement as t,store as i,useRef as s,withScope as n}from"@wordpress/interactivity";const r={initInView(){const{ref:i}=t(),s=new IntersectionObserver(n((([t])=>{e().inView=t.isIntersecting})));return i&&s.observe(i),()=>i&&s.unobserve(i)}},o={get prefersReducedMotion(){return window.matchMedia("(prefers-reduced-motion)").matches}},{state:l,actions:a,callbacks:c}=i("wi-sonx-fse/services-slider",{state:{...o,get slideWidth(){const{slides:t,activeSlide:i}=e();return t[i]?t[i].offsetWidth:0},get shouldInitialize(){const{slides:t,visibleCount:i}=e();return t&&t.length>i},get interval(){const{prefersReducedMotion:t}=l,{autoPlay:i,interval:s,paused:n,inView:r}=e();return!t&&i&&r&&!n?s||5e3:0}},actions:{goToSlide(t=null){const{item:i,slides:s,activeSlide:n}=e();t||(t=i);const r=t.offsetLeft-s[n].offsetLeft;t.parentElement.scrollBy({left:r,behavior:"smooth"})},shiftSlide(t=1){const{slides:i,activeSlide:s}=e(),n=i[(s+t)%i.length];a.goToSlide(n)},prevSlide(){a.shiftSlide(-1)},nextSlide(){a.shiftSlide(1)},pause(){e().paused=!0},maybePlay(){e().paused=!1}},callbacks:{...r,run(){const{ref:i}=t(),n=e();n.intervalHandle=s(),i&&(n.slides=Array.from(i.querySelectorAll(".wp-block-post")))},init(){const{ref:i}=t(),s=e();if(s.slides=Array.from(i.querySelectorAll(".wp-block-post")),s.activeSlide=0,s.visibleCount=1,s.paused=!1,c.onResize(),l.shouldInitialize)return i.classList.add("is-initialized"),()=>{i.classList.remove("is-initialized")}},onResize(){const{ref:i}=t(),{slideWidth:s}=l,n=e(),r=s/i.offsetWidth*100;let o=0,a=0;const c=Math.max(Math.floor(100/r),1);c>1&&(a=Math.max(c-2.5,.5)*r),c>2&&(o=r/2),n.marginLeft=o,n.marginRight=a,n.visibleCount=c},onVisibilityChange(){document.hidden?a.pause():a.maybePlay()},watchInterval(){const{interval:t,shouldInitialize:i}=l;if(!i||!t)return;const{intervalHandle:s}=e();return s.current=setInterval(n((()=>{a.nextSlide()})),t),()=>{clearInterval(s.current)}},watchIntersection(){const{shouldInitialize:i}=l;if(!i)return;const{slides:s,marginLeft:r,marginRight:o}=e(),{ref:a}=t(),c=new IntersectionObserver(n((t=>{t.forEach((t=>{if(t.target.classList.toggle("is-active",t.isIntersecting),t.isIntersecting){const i=s.indexOf(t.target);e().activeSlide=i}}))})),{root:a,rootMargin:`0px -${o}% 0px -${r}%`,threshold:1});return s.forEach((e=>c.observe(e))),()=>s&&s.forEach((e=>{e.classList.remove("is-active"),c.unobserve(e)}))},isActiveDot(){const{item:t,slides:i,activeSlide:s}=e();return i.indexOf(t)===s},dotIndex(){const{item:t,slides:i}=e();return String(i.indexOf(t)+1)}}});